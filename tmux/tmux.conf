# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @resurrect-dir '$HOME/.tmux/resurrect/'
set -g @resurrect-processes 'ssh ~nvim docker lazygit lazydocker' 


#-----------------------------------------------------------------------------
# terminal
#-----------------------------------------------------------------------------
# enable mouse support for general selection and control
set -g mouse on

# Automatically set window title
set -g set-titles on
set -g set-titles-string '#{session_name} | #{window_name}'

# colors fix
set-option -sa terminal-overrides ",xterm*:Tc"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# enable 24-bit true color RGB escape sequences under st
# https://sunaku.github.io/tmux-24bit-color.html
set-option -ga terminal-overrides ',st-256color:Tc'
set-option -ga terminal-overrides ',xterm-256color:Tc' # hterm (ChromeOS)

# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
set-option -ga terminal-overrides ',xterm*:XT'

# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
# http://stackoverflow.com/questions/15195624
set-option -ga terminal-overrides ',st-256color:smkx=\E='

# yank to system clipboard rather than primary selection
# http://invisible-island.net/xterm/terminfo-contents.html#tic-xterm_tmux
set-option -ga terminal-overrides ',xterm*:Ms=\E]52;c;%p2%s\007'

#-----------------------------------------------------------------------------
# appearance
#-----------------------------------------------------------------------------
# set selection color
# set -g mode-style 'bg=#ffd43b,fg=#4dabf7,bold,noreverse'

set-option        -g status-style                fg=colour246,bg=colour237
set-window-option -g window-status-current-style fg=colour214,bg=colour239
set-option        -g pane-border-style           fg=colour239
set-option        -g pane-active-border-style    fg=colour208
set-option        -g message-style               fg=colour214,bg=colour239
set-window-option -g mode-style                  fg=colour214,bg=colour239,bold,noreverse

set-window-option -g window-status-bell-style     'bg=#205791,fg=#d5edf8' # info (blue)
set-window-option -g window-status-activity-style 'bg=#8a1f11,fg=#fbe3e4' # error (red)

#-----------------------------------------------------------------------------
# status bar
#-----------------------------------------------------------------------------
# make window list easier to scan
set-window-option -g window-status-format         ' #[bold]#I#F#[nobold]#W '
set-window-option -g window-status-current-format ' #[bold]#I#F#[nobold]#W '
set-window-option -g window-status-separator      ''

set -g status-right '#(gitmux "#{pane_current_path}")'
#-----------------------------------------------------------------------------
# windows
#-----------------------------------------------------------------------------
# next / previous window Alt + h/l
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Update files on focus (using for vim)
set -g focus-events on

# allow Vim to receive modifier keys: Shift, Control, Alt
set-window-option -g xterm-keys on

# Set the prefix key to `Ctrl-a` (like GNU Screen)
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Allow terminal to receive mouse events (scrolling, pane resizing, etc.)
set -g set-clipboard on

# prevent tmux from catching modifier keys meant for Vim
set-option -s escape-time 0

# Use `Shift` + arrow keys to resize panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 2
bind -n S-Down resize-pane -D 2

# Reload the tmux configuration file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"


# Set Vi editing modee
set -g mode-keys vi
set -g status-keys vi

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi M-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# open paners in current directory 
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Status update interval
set -g status-interval 1

# renumber windows when a window is closed
set -g renumber-windows on   


# focus by number
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
bind-key -n M-0 choose-window
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :1 \; select-window -t :-1

# swap window
bind-key -n M-< swap-window -t :-1
bind-key -n M-> swap-window -t :+1

# monitor window
set-option -g visual-activity on
set-option -g visual-silence on

bind-key -n M-k \
  set-window-option monitor-activity \;\
  display-message 'monitor-activity #{?monitor-activity,on,off}'

bind-key -n M-K \
  if-shell 'tmux show-window-option -g monitor-activity | grep -q off$' \
    'set-window-option -g monitor-activity on' \
    'set-window-option -g monitor-activity off' \;\
  display-message 'monitor-activity #{?monitor-activity,on,off} (global)'

bind-key -n M-j \
  command-prompt -p 'monitor-silence (seconds):' -I '#{monitor-silence}' \
    'set-window-option monitor-silence %% ;\
      display-message "monitor-silence #{?monitor-silence,on,off}"'

# Require Plugins
run '~/.tmux/plugins/tpm/tpm'

